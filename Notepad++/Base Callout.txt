
Your resubmitted callout with request ID 16965202  has been received by dbCloudManager, but it will never be processed 
and therefore it will stay in status “NEW” for good.  This is because a callout for this CSA subscription had already been received 
and successfully processed earlier. This was the callout discussed in my email from March 22, 2017 2:18 PM  (see below).

Please note:
-	If a callout has been processed successfully, then any re-submits of the callout will be ignored by dbCloudManager.
This is because it considers the callout for this particular subscription as “done”. It won’t monitor the queue of incoming 
requests for callouts for the same subscription any more. 
=> This is what’s happening with request ID 16965202  
-	If a callout has been processed and failed, then a re-submit does not help either, because dbCloudManager will consider
the entire provisioning as failed. Again, it won’t expect another callout for the same subscription and ignore any re-submits.
=> not applicable in this case anyway 

-	To summarize, re-submitting callouts will never help. That said, it has been discussed to possibly change the behaviour
of dbCloudManager in one of the next releases, so that it would a allow a resubmit of callouts if the original callout failed.

What I suggested in my email was not to resubmit the callout but to retry polling the status of the original callout.



Hi Pranjal,

The process is roughly as follows:

-	A provisioning request is created inside Deutsche Bank. it flows through various systems and finally ends up in dbCloudManager.
-	dbCloudManager sends a provisioning request to HP CSA. This eventually creates a subscription in CSA and the provisioning process begins.
-	At some point during the provisioning process CSA sends a “callout” request back to dbCloudManager. The main reason for this is that
some networking tasks need to be done (like creating a DNS entry and Active Directory objects for the new machine). These tasks cannot
be done by CSA, they must be done by dbCloudManager. Therefore CSA sends the callout request to trigger these networking tasks. The 
callout includes networking information like the IP address that has been assigned to the new machine by HPE.
-	While the callout is processed by dbCloudManager, i.e. while the networking tasks are executed, CSA polls the status of its callout request.
Once the status becomes COMPLETE and the outcome SUCCESS, CSA knows that dbCloudManager has successfully completed the networking
tasks. So CSA can carry on with the remaining actions of the provisioning process. Eventually, the subscription will become ACTIVE in CSA.

Everything works automatically, there is absolutely no manual intervention in dbCloudManager. Not sure about how HPE is handling the process in CSA though.

As I explained in my earlier email, it does not make any sense to resubmit callouts from CSA to dbCloudManager, as long as they have been successfully received.
Of course, if a networking or connectivity problem occurs and CSA fails to send the callout to dbCloudManager, then of course you should retry sending it. But once 
a callout has been received by dbCloudManager, any resubmits are pointless. Because dbCloudManager waits for exactly one callout per subscription. Once that 
callout has been processed, it will stop waiting for callouts for the same subscription, regardless of the outcome of the callout that was processed (successful or failed)

In the particular case discussed in this email thread, the callout from CSA has been received and successfully processed by dbCloudManager. As a result t’s status is 
currently set to COMPLETE and SUCCESS. But it seems that CSA failed to poll this status update. Therefore CSA wrongly assumes that the callout has not yet been 
processed dbCloudManager, and the provisioning process for this subscription remains suspended in CSA. The solution of this situation is to retry polling the status 
of the original callout request.

Hope that helps!

Kind regards,
Thilo Frotscher
